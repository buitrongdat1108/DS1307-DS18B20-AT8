;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 20/07/2020
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8A
;Program type            : Application
;AVR Core Clock frequency: 7.372800 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// I2C Bus functions
;#include <i2c.h>
;
;// DS1307 Real Time Clock functions
;#include <ds1307.h>
;
;// 1 Wire Bus interface functions
;#include <1wire.h>
;
;// DS1820 Temperature Sensor functions
;#include <ds1820.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;#include <delay.h>
;#include <stdio.h>
;unsigned int temp;
;unsigned int temp1,temp2,temp3,temp4;
;unsigned char byte0,byte1,byte2,a;        //skip rom cho DS18B20
;char str[8];                       //luu thong tin gio phut giay
;char wd[3];                        //bien luu thu trong tuan
;unsigned char h,m,s;               //bien luu thong tin gio, phut, giay
;unsigned char week_day,day,month,year;   //bien luu thong tin ngay,thang,nam
;//khoi tao cho led 7 thanh
;unsigned int led7seg_CC[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};

	.DSEG
;unsigned int led7seg_CA[10]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0x8F,0x80,0x90};
;unsigned int led7seg_CC_point[10]={ 0xBF, 0x86, 0xDB, 0xCF, 0xE6, 0xED, 0xFD, 0x87, 0xFF, 0xEF};
;unsigned int led7seg_CA_point[10]={0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0x02, 0x78, 0x00, 0x10};
;unsigned char zerodegree_CA = 0x9C;
;unsigned char zerodegree_CC = 0x63;
;unsigned char degree_C_CA = 0x46;
;unsigned char degree_C_CC = 0xB9;
;//khoi tao cho IC dich chot 74HC595
;//#define 74HC595_PORT   PORTD
;//#define 74HC595_DDR    DDRD
;#define HC595_DS_POS PORTD.6         //Data pin (DS) pin location
;#define HC595_SH_CP_POS PORTD.5      //Shift Clock (SH_CP) pin location
;#define HC595_ST_CP_POS PORTD.7      //Store Clock (ST_CP) pin location
;unsigned char i,j,k,l,m;
;void hienthithu(unsigned char x)                  //DS1307 chi hien thi thu trong tuan tu 1 den 7 nen can ham nay de tha ...
; 0000 0044 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0045     switch(x)
;PCODE: $0000000F VOL: 0
;	x -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0046         {
; 0000 0047             case 1: lcd_putsf("Mon");
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0048                 break;
;PCODE: $00000017 VOL: 0
; 0000 0049             case 2: lcd_putsf("Tue");
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 004A                 break;
;PCODE: $0000001E VOL: 0
; 0000 004B             case 3: lcd_putsf("Wed");
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 004C                 break;
;PCODE: $00000025 VOL: 0
; 0000 004D             case 4: lcd_putsf("Thu");
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 004E                 break;
;PCODE: $0000002C VOL: 0
; 0000 004F             case 5: lcd_putsf("Fri");
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0050                 break;
;PCODE: $00000033 VOL: 0
; 0000 0051             case 6: lcd_putsf("Sar");
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0052                 break;
;PCODE: $0000003A VOL: 0
; 0000 0053             case 7: lcd_putsf("Sun");
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0054                 break;
;PCODE: $00000041 VOL: 0
; 0000 0055             default:
;PCODE: $00000042 VOL: 0
; 0000 0056         }
;PCODE: $00000043 VOL: 0
; 0000 0057     sprintf(wd,"%3c",x);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0058     //lcd_gotoxy(13,0);
; 0000 0059     lcd_puts(wd);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 005A }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;void HC595_init()
; 0000 005C {
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 005D   DDRD.5=1;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 005E   DDRD.6=1;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 005F   DDRD.7=1;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0060 }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;
;void HC595_clock()
; 0000 0063 {
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0064 PORTD.5=1;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0065 delay_us(1);
;PCODE: $00000063 VOL: 0
; 0000 0066 PORTD.5=0;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0067 delay_us(1);
;PCODE: $00000066 VOL: 0
; 0000 0068 }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;
;void HC595_latch()
; 0000 006B {
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 006C PORTD.7=1;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 006D delay_us(1);
;PCODE: $0000006D VOL: 0
; 0000 006E PORTD.7=0;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 006F delay_us(1);
;PCODE: $00000070 VOL: 0
; 0000 0070 }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;
;void nhap5sohienthi(unsigned int data1, unsigned int data2, unsigned int data3, unsigned int data4, unsigned int data5)
; 0000 0073 {
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0074 
; 0000 0075 
; 0000 0076   for(i=0;i<8;i++)
;PCODE: $00000075 VOL: 0
;	data1 -> Y+8
;	data2 -> Y+6
;	data3 -> Y+4
;	data4 -> Y+2
;	data5 -> Y+0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0077   {
; 0000 0078 
; 0000 0079   if(data1&0x80)
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 007A   {
; 0000 007B     PORTD.6=1;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 007C     //74HC595_PORT&=(~(1<<74HC595_DS_POS));
; 0000 007D   }
; 0000 007E   else
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 007F   {
; 0000 0080     PORTD.6=0;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0081     //74HC595_PORT|=(1<<74HC595_DS_POS);
; 0000 0082   }
;PCODE: $00000089 VOL: 0
; 0000 0083   HC595_clock();
;PCODE: $0000008A VOL: 0
; 0000 0084   data1=data1<<1;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0085   }
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0086 
; 0000 0087 
; 0000 0088   for(j=0;j<8;j++)
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0089   {
; 0000 008A 
; 0000 008B   if(data2&0x80)
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 008C   {
; 0000 008D     PORTD.6=1;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 008E     //74HC595_PORT&=(~(1<<74HC595_DS_POS));
; 0000 008F   }
; 0000 0090   else
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0091   {
; 0000 0092     PORTD.6=0;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0093     //74HC595_PORT|=(1<<74HC595_DS_POS);
; 0000 0094   }
;PCODE: $000000A7 VOL: 0
; 0000 0095   HC595_clock();
;PCODE: $000000A8 VOL: 0
; 0000 0096   data2=data2<<1;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0097   }
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0098 
; 0000 0099   for(k=0;k<8;k++)
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 009A   {
; 0000 009B 
; 0000 009C   if(data3&0x80)
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 009D   {
; 0000 009E     PORTD.6=1;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 009F   }
; 0000 00A0   else
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00A1   {
; 0000 00A2     PORTD.6=0;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00A3   }
;PCODE: $000000C5 VOL: 0
; 0000 00A4   HC595_clock();
;PCODE: $000000C6 VOL: 0
; 0000 00A5   data3=data3<<1;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00A6   }
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00A7 
; 0000 00A8   for(l=0;l<8;l++)
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00A9   {
; 0000 00AA 
; 0000 00AB   if(data4&0x80)
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00AC   {
; 0000 00AD     PORTD.6=1;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00AE   }
; 0000 00AF   else
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00B0   {
; 0000 00B1     PORTD.6=0;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00B2   }
;PCODE: $000000E3 VOL: 0
; 0000 00B3   HC595_clock();
;PCODE: $000000E4 VOL: 0
; 0000 00B4   data4=data4<<1;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00B5   }
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00B6 
; 0000 00B7   for(m=0;m<8;m++)
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 00B8   {
; 0000 00B9 
; 0000 00BA   if(data5&0x80)
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00BB   {
; 0000 00BC     PORTD.6=1;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00BD   }
; 0000 00BE   else
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00BF   {
; 0000 00C0     PORTD.6=0;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00C1   }
;PCODE: $00000101 VOL: 0
; 0000 00C2   HC595_clock();
;PCODE: $00000102 VOL: 0
; 0000 00C3   data5=data5<<1;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00C4   }
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00C5 
; 0000 00C6   HC595_latch();
;PCODE: $0000010C VOL: 0
; 0000 00C7 }
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;void main(void)
; 0000 00C9 {
;PCODE: $00000110 VOL: 0
; 0000 00CA // Declare your local variables here
; 0000 00CB 
; 0000 00CC // Input/Output Ports initialization
; 0000 00CD // Port B initialization
; 0000 00CE // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00CF DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00D0 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00D1 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00D2 
; 0000 00D3 // Port C initialization
; 0000 00D4 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00D5 DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00D6 // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00D7 PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 00D8 
; 0000 00D9 // Port D initialization
; 0000 00DA // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00DB DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00DC // State: Bit7=0 Bit6=0 Bit5=0 Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00DD PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00DE 
; 0000 00DF // Timer/Counter 0 initialization
; 0000 00E0 // Clock source: System Clock
; 0000 00E1 // Clock value: Timer 0 Stopped
; 0000 00E2 TCCR0=(0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00E3 TCNT0=0x00;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00E4 
; 0000 00E5 // Timer/Counter 1 initialization
; 0000 00E6 // Clock source: System Clock
; 0000 00E7 // Clock value: Timer1 Stopped
; 0000 00E8 // Mode: Normal top=0xFFFF
; 0000 00E9 // OC1A output: Disconnected
; 0000 00EA // OC1B output: Disconnected
; 0000 00EB // Noise Canceler: Off
; 0000 00EC // Input Capture on Falling Edge
; 0000 00ED // Timer1 Overflow Interrupt: Off
; 0000 00EE // Input Capture Interrupt: Off
; 0000 00EF // Compare A Match Interrupt: Off
; 0000 00F0 // Compare B Match Interrupt: Off
; 0000 00F1 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00F2 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00F3 TCNT1H=0x00;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00F4 TCNT1L=0x00;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00F5 ICR1H=0x00;
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00F6 ICR1L=0x00;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00F7 OCR1AH=0x00;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00F8 OCR1AL=0x00;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00F9 OCR1BH=0x00;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00FA OCR1BL=0x00;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00FB 
; 0000 00FC // Timer/Counter 2 initialization
; 0000 00FD // Clock source: System Clock
; 0000 00FE // Clock value: Timer2 Stopped
; 0000 00FF // Mode: Normal top=0xFF
; 0000 0100 // OC2 output: Disconnected
; 0000 0101 ASSR=0<<AS2;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 0102 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 0103 TCNT2=0x00;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 0104 OCR2=0x00;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0105 
; 0000 0106 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0107 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 0108 
; 0000 0109 // External Interrupt(s) initialization
; 0000 010A // INT0: Off
; 0000 010B // INT1: Off
; 0000 010C MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 010D 
; 0000 010E // USART initialization
; 0000 010F // USART disabled
; 0000 0110 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 0111 
; 0000 0112 // Analog Comparator initialization
; 0000 0113 // Analog Comparator: Off
; 0000 0114 // The Analog Comparator's positive input is
; 0000 0115 // connected to the AIN0 pin
; 0000 0116 // The Analog Comparator's negative input is
; 0000 0117 // connected to the AIN1 pin
; 0000 0118 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0119 SFIOR=(0<<ACME);
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 011A 
; 0000 011B // ADC initialization
; 0000 011C // ADC disabled
; 0000 011D ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 011E 
; 0000 011F // SPI initialization
; 0000 0120 // SPI disabled
; 0000 0121 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0122 
; 0000 0123 // TWI initialization
; 0000 0124 // TWI disabled
; 0000 0125 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 0126 
; 0000 0127 // Bit-Banged I2C Bus initialization
; 0000 0128 // I2C Port: PORTC
; 0000 0129 // I2C SDA bit: 4
; 0000 012A // I2C SCL bit: 5
; 0000 012B // Bit Rate: 100 kHz
; 0000 012C // Note: I2C settings are specified in the
; 0000 012D // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 012E i2c_init();
;PCODE: $0000014D VOL: 0
; 0000 012F 
; 0000 0130 // DS1307 Real Time Clock initialization
; 0000 0131 // Square wave output on pin SQW/OUT: On
; 0000 0132 // Square wave frequency: 1Hz
; 0000 0133 rtc_init(0,1,0);
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0134 
; 0000 0135 // 1 Wire Bus initialization
; 0000 0136 // 1 Wire Data port: PORTD
; 0000 0137 // 1 Wire Data bit: 3
; 0000 0138 // Note: 1 Wire port settings are specified in the
; 0000 0139 // Project|Configure|C Compiler|Libraries|1 Wire menu.
; 0000 013A w1_init();
;PCODE: $00000154 VOL: 0
; 0000 013B 
; 0000 013C // Alphanumeric LCD initialization
; 0000 013D // Connections are specified in the
; 0000 013E // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 013F // RS - PORTC Bit 0
; 0000 0140 // RD - PORTC Bit 1
; 0000 0141 // EN - PORTC Bit 2
; 0000 0142 // D4 - PORTC Bit 3
; 0000 0143 // D5 - PORTD Bit 0
; 0000 0144 // D6 - PORTD Bit 1
; 0000 0145 // D7 - PORTD Bit 2
; 0000 0146 // Characters/line: 16
; 0000 0147 lcd_init(16);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0148 HC595_init();
;PCODE: $00000157 VOL: 0
; 0000 0149 rtc_set_time(10,10,10);
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 014A rtc_set_date(3,21,7,20);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 014B 
; 0000 014C while (1)
;PCODE: $00000166 VOL: 0
; 0000 014D       {
; 0000 014E       // Place your code here
; 0000 014F          w1_init();
;PCODE: $00000167 VOL: 0
; 0000 0150          w1_write(0xCC);      //skip ROM
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 0151          w1_write(0x44);      //Stack converse, bat dau chuyen doi nhiet do
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 0152          delay_ms(200);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0153          w1_init();
;PCODE: $0000016F VOL: 0
; 0000 0154          w1_write(0xCC);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 0155          w1_write(0xBE);      //read scratchpad
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 0156 //giai thich: trong DS18B20 co 8 byte thanh ghi,
; 0000 0157 //trong do chi co hai byte dau tien la doc nhiet do (byte0,byte1)
; 0000 0158          byte0=w1_read();
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 0159          byte1=w1_read();
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 015A          byte2=(byte0)&0b00001111;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 015B          a = (byte2>>1);
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 015C          a |=byte2>>3;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 015D          temp=(((byte1)&0b00000111)<<5)|(((byte0)&0b11111000)>>3);
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 015E          temp1=(((byte1)&0b00000111)<<5)|(((byte0)&0b11111000)>>3);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 015F          temp2 = temp*10;
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0160          temp3 = temp1*10;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 0161          temp4 = temp2 - temp3;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 0162          //nhap5sohienthi(led7seg_CA[temp/10],led7seg_CA_point[temp%10],led7seg_CA[(temp*10)%10],zerodegree_CA,degree_C_ ...
; 0000 0163          nhap5sohienthi(degree_C_CA,zerodegree_CA,led7seg_CA[(temp*10)%10],led7seg_CA_point[temp%10],led7seg_CA[temp/10] ...
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0164          rtc_get_time(&h,&m,&s);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 0165          rtc_get_date(&week_day,&day,&month,&year);
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 0166          sprintf(str,"%0.2d:%0.2d:%0.2d ",h,m,s);
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 0167          lcd_gotoxy(2,0);
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0168          lcd_puts(str);
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0169 
; 0000 016A          lcd_gotoxy(0,1);
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 016B          hienthithu(week_day);
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 016C          lcd_putsf("/");
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 016D          lcd_putchar(day/10+0x30);
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 016E          lcd_putchar(day%10+0x30);
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 016F          lcd_putsf("/");
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 0170          lcd_putchar(month/10+0x30);
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 0171          lcd_putchar(month%10+0x30);
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 0172          lcd_putsf("/");
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 0173          lcd_putchar(2+0x30);
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 0174          lcd_putchar(0+0x30);
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 0175          lcd_putchar(year/10+0x30);
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 0176          lcd_putchar(year%10+0x30);
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 0177 
; 0000 0178       }
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 0179 }
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
